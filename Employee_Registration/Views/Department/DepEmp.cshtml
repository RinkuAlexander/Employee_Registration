@model Employee_Registration.Models.DepartmentViewModel

@{
    ViewBag.Title = "Department Employee Management";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Department Employee Management</h2>

@using (Html.BeginForm("AddDepartment", "Department", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-group">
        @Html.LabelFor(m => m.DepartmentID, new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.DropDownListFor(m => m.SelectedDepartmentID, new SelectList(Model.Departments, "DepartmentID", "DepartmentID"), "Select Department", new { @class = "form-control", @onchange = "populateDepartmentDetails(this.value);" })
        </div>
        @Html.LabelFor(m => m.DepartmentName, new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.TextBoxFor(m => m.DepartmentName, new { @class = "form-control", @readonly = "readonly" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.DateOfCreation, new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.TextBoxFor(m => m.DateOfCreation, "{0:dd.MM.yyyy}", new { @class = "form-control", @readonly = "readonly" })
        </div>
        @Html.LabelFor(m => m.Status, new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.TextBoxFor(m => m.Status, new { @class = "form-control", @readonly = "readonly" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.SelectedEmployeeID, new { @class = "control-label col-md-2" })
        <div class="col-md-2">
            @Html.DropDownListFor(m => m.SelectedEmployeeID, Model.Employees, "Select Employee", new { @class = "form-control", @onchange = "populateEmployeeName(this.value);" })
        </div>
        @Html.LabelFor(m => m.EmployeeName, new { @class = "control-label col-md-2" })
        <div class="col-md-2">
            @Html.TextBoxFor(m => m.EmployeeName, new { @class = "form-control", @readonly = "readonly" })
        </div>
        @Html.LabelFor(m => m.DateOfJoining, new { @class = "control-label col-md-2" })
        <div class="col-md-2">
            @Html.TextBoxFor(m => m.DateOfJoining, "{0:dd.MM.yyyy}", new { @class = "form-control" })
        </div>
        @Html.LabelFor(m => m.ContractPeriod, new { @class = "control-label col-md-2" })
        <div class="col-md-2">
            @Html.TextBoxFor(m => m.ContractPeriod, new { @class = "form-control" })
        </div>
        <div class="col-md-2">
            <input type="button" value="Add" onclick="addEmployee();" class="btn btn-primary" />
        </div>
    </div>
}

<table class="table table-bordered">
    <thead>
        <tr>
            <th>#SLNo</th>
            <th>#EmployeeID</th>
            <th>#EmployeeName</th>
            <th>#Date of Joining</th>
            <th>#Contract Period</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.DepartDetList)
        {
            <tr>
                <td>@item.SLNo</td>
                <td>@item.EmployeeID</td>
                <td>@item.EmployeeName</td>
                <td>@item.DateOfJoining.ToString("dd.MM.yyyy")</td>
                <td>@item.ContractPeriod</td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script type="text/javascript">
        function populateDepartmentDetails(departmentId) {
            $.ajax({
                url: '@Url.Action("GetDepartmentDetails", "Department")',
                type: 'GET',
                data: { departmentId: departmentId },
                success: function (data) {
                    $('#DepartmentName').val(data.DepartmentName);
                    $('#DateOfCreation').val(data.DateOfCreation);
                    $('#Status').val(data.Status);
                }
            });
        }

        function populateEmployeeName(employeeId) {
            $.ajax({
                url: '@Url.Action("FetchEmployeeName", "Department")',
                type: 'GET',
                data: { employeeId: employeeId },
                success: function (data) {
                    $('#EmployeeName').val(data);
                }
            });
        }

        function addEmployee() {
            // Function to add employee details to the table
        }
    </script>
}
