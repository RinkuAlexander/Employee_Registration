@model Employee_Registration.Models.DepartmentViewModel

@{
    ViewBag.Title = "AddDepartment";
}


    <h2 class="text-center">Department</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.DepartmentID, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.DepartmentID, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DepartmentID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DateOfCreation, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.DateOfCreation, new { htmlAttributes = new { @class = "form-control datepicker" } })
                            @Html.ValidationMessageFor(model => model.DateOfCreation, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.DepartmentName, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.DepartmentName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DepartmentName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.DropDownListFor(model => model.Status, new List<SelectListItem>
                            {
                                new SelectListItem { Text = "Active", Value = "Active" },
                                new SelectListItem { Text = "Inactive", Value = "Inactive" }
                            }, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            @*<div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div*@
           
        </div>
        <div class="container">
            <div class="row">
                <div class="col-md-3">
                    <div class="form-group">
                        @Html.LabelFor(m => m.SelectedEmployeeID, new { @class = "control-label" })
                        @Html.DropDownListFor(m => m.SelectedEmployeeID, Model.Employees, "Select Employee", new { @class = "form-control", onchange = "this.form.submit();" })
                        @Html.ValidationMessageFor(m => m.SelectedEmployeeID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-3">
                    <div class="form-group">
                        @Html.LabelFor(m => m.EmployeeName, new { @class = "control-label" })
                        @Html.TextBoxFor(m => m.EmployeeName, new { @class = "form-control", @readonly = "readonly" })
                        @Html.ValidationMessageFor(m => m.EmployeeName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-3">
                    <div class="form-group">
                        @Html.LabelFor(m => m.DateOfJoining, new { @class = "control-label" })
                        @Html.TextBoxFor(m => m.DateOfJoining, new { @class = "form-control", @type = "date" })
                        @Html.ValidationMessageFor(m => m.DateOfJoining, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-2">
                    <div class="form-group">
                        @Html.LabelFor(m => m.ContractPeriod, new { @class = "control-label" })
                        @Html.TextBoxFor(m => m.ContractPeriod, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.ContractPeriod, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-1">
                    <div class="form-group">
                        <label class="control-label">&nbsp;</label>
                        <input type="submit" value="Add" class="btn btn-primary form-control" />
                    </div>
                </div>
            </div>
        </div>
    }


    @*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        
    }

